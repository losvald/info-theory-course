CC=		g++
CFLAGS=		-c -Wall -O2

SRC_DIR=	..

SOURCE_SRC_DIR=		${SRC_DIR}/symbol-source
SOURCE_MAIN=		izvor.cpp
SOURCE_BIN=		izvor.exe
SOURCE_OBJ=		symbol-source.o

SOURCE_CODER_SRC_DIR=	${SRC_DIR}/source-coder
SOURCE_CODER_MAIN=	ent_kod.cpp
SOURCE_CODER_BIN=	ent_kod.exe
SOURCE_CODER_OBJ=	source-coder.o

CHANNEL_CODER_SRC_DIR=	${SRC_DIR}/channel-coder
CHANNEL_CODER_MAIN=	z_kod.cpp
CHANNEL_CODER_BIN=	z_kod.exe
CHANNEL_CODER_OBJ=	channel-coder.o

CHANNEL_SRC_DIR=	${SRC_DIR}/channel
CHANNEL_MAIN=		kanal.cpp
CHANNEL_BIN=		kanal.exe
CHANNEL_BIN_OBJ=	channel.o

CHANNEL_DECODER_SRC_DIR=${SRC_DIR}/channel-decoder
CHANNEL_DECODER_MAIN=	z_dekod.cpp
CHANNEL_DECODER_BIN=	z_dekod.exe
CHANNEL_BIN_OBJ=	channel-decoder.o

DEST_DECODER_SRC_DIR=	${SRC_DIR}/DEST-decoder
DEST_DECODER_MAIN=	ent_dek.cpp
DEST_DECODER_BIN=	ent_dek.exe
DEST_DECODER_OBJ=	destination-decoder.o

RUN_ALL_BIN=		tinf-labos


# All
all: tinf-labos

# All
tinf-labos: $(SOURCE_BIN) $(SOURCE_CODER_BIN)
	echo 'echo "Running TINF-LABOS all"' > $(RUN_ALL_BIN)
	echo './${SOURCE_BIN} 12.txt' >> $(RUN_ALL_BIN)
	echo './${SOURCE_CODER_BIN} 12.txt 23.txt' >> $(RUN_ALL_BIN)
	chmod +x $(RUN_ALL_BIN)

# Svojstva izvora
source_properties.o:
	$(CC) $(CFLAGS) -o source_properties.o ${SRC_DIR}/source_properties.cpp

# Izvor
$(SOURCE_BIN): $(SOURCE_OBJ) source_properties.o
	$(CC) -o $(SOURCE_BIN) $(SOURCE_OBJ) source_properties.o
$(SOURCE_OBJ): ${SOURCE_SRC_DIR}/$(SOURCE_MAIN) ${SOURCE_SRC_DIR}/*.h $(SRC_DIR)/*.h
	$(CC) $(CFLAGS) -o $(SOURCE_OBJ) ${SOURCE_SRC_DIR}/$(SOURCE_MAIN)

# Entropijski koder
$(SOURCE_CODER_BIN): $(SOURCE_CODER_OBJ) source_properties.o
	$(CC) -o $(SOURCE_CODER_BIN) $(SOURCE_CODER_OBJ) source_properties.o
$(SOURCE_CODER_OBJ): $(SOURCE_CODER_SRC_DIR)/$(SOURCE_CODER_MAIN) $(SOURCE_CODER_SRC_DIR)/*.h $(SRC_DIR)/*.h
	$(CC) $(CFLAGS) -o $(SOURCE_CODER_OBJ) $(SOURCE_CODER_SRC_DIR)/$(SOURCE_CODER_MAIN)
	
# Zastitni koder
$(CHANNEL_CODER_BIN): $(CHANNEL_CODER_OBJ)
	$(CC) -o $(CHANNEL_CODER_BIN) $(CHANNEL_CODER_OBJ)
$(CHANNEL_CODER_OBJ): $(CHANNEL_CODER_SRC_DIR)/ $(CHANNEL_CODER_MAIN) $(CHANNEL_CODER_SRC_DIR)/*.h $(SRC_DIR)/*.h
	(CC) $(CFLAGS) -o $(CHANNEL_CODER_OBJ) $(CHANNEL_CODER_SRC_DIR)/$(CHANNEL_CODER_MAIN)
	
# Kanal
$(CHANNEL_BIN): $(CHANNEL_OBJ)
	$(CC) -o $(CHANNEL_BIN) $(CHANNEL_OBJ)
$(CHANNEL_OBJ): $(CHANNEL_SRC_DIR)/ $(CHANNEL_MAIN) $(CHANNEL_SRC_DIR)/*.h $(SRC_DIR)/*.h
	(CC) $(CFLAGS) -o $(CHANNEL_OBJ) $(CHANNEL_SRC_DIR)/$(CHANNEL_MAIN)

# Zastitno dekodiranje
$(CHANNEL_DECODER_BIN): $(CHANNEL_DECODER_OBJ)
	$(CC) -o $(CHANNEL_DECODER_BIN) $(CHANNEL_DECODER_OBJ)
$(CHANNEL_DECODER_OBJ): $(CHANNEL_DECODER_SRC_DIR)/ $(CHANNEL_DECODER_MAIN) $(CHANNEL_DECODER_SRC_DIR)/*.h $(SRC_DIR)/*.h
	(CC) $(CFLAGS) -o $(CHANNEL_DECODER_OBJ) $(CHANNEL_DECODER_SRC_DIR)/$(CHANNEL_DECODER_MAIN)
	
# Entropijsko dekodiranje
$(DEST_DECODER_BIN): $(DEST_DECODER_OBJ) source_properties.o
	$(CC) -o $(DEST_DECODER_BIN) $(DEST_DECODER_OBJ) source_properties.o
$(DEST_DECODER_OBJ): $(DEST_DECODER_SRC_DIR)/ $(DEST_DECODER_MAIN) $(DEST_DECODER_SRC_DIR)/*.h $(SRC_DIR)/*.h
	(CC) $(CFLAGS) -o $(DEST_DECODER_OBJ) $(DEST_DECODER_SRC_DIR)/$(DEST_DECODER_MAIN)

clean:
	rm -f *.o ${SOURCE_BIN} $(SOURCE_CODER_BIN) $(CHANNEL_CODER_BIN) $(CHANNEL_BIN) $(CHANNEL_DECODER_BIN) $(DEST_DECODER_BIN) $(RUN_ALL_BIN)
	
